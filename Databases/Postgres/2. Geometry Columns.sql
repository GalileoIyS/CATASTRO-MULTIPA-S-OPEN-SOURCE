--------------------------------------------------------------------------------
-- CREACIÓN DE COLUMNAS DE GEOMETRÍA...
-- MODIFICAR SEGÚN EL IDENTIFICADOR XXXXX POR EL SISTEMA DE COORDENADAS DESEADO
--------------------------------------------------------------------------------
SELECT AddGeometryColumn('gcm', 'lag_spatial_unit', 'reference_point', 32618, 'POINT', 2);
SELECT AddGeometryColumn('gcm', 'lag_spatial_unit', 'polygon', 32618, 'MULTIPOLYGON', 2);
SELECT AddGeometryColumn('gcm', 'lag_crops', 'polygon', 32618, 'MULTIPOLYGON', 2);
SELECT AddGeometryColumn('gcm', 'ext_address', 'address_coordinate', 32618, 'POINT', 2);

COMMENT ON COLUMN GCM.LAG_SPATIAL_UNIT.REFERENCE_POINT IS 'Coordenada de un punto dentro de la Unidad Espacial';
COMMENT ON COLUMN GCM.LAG_SPATIAL_UNIT.POLYGON IS 'Geometria del tipo poligonal';
COMMENT ON COLUMN GCM.LAG_CROPS.POLYGON IS 'Geometria del tipo poligonal';
COMMENT ON COLUMN GCM.EXT_ADDRESS.ADDRESS_COORDINATE IS 'Coordenada de la Direccion Postal Externa';

---------------------------------------------------------------------------------
-- CREACIÓN DE ÍNDICES ESPACIALES ASOCIADOS...
---------------------------------------------------------------------------------
create index lag_sunit_rp_ix ON GCM.lag_spatial_unit using gist (reference_point);
create index lag_sunit_polygon_ix on GCM.lag_spatial_unit using gist(polygon);
create index lag_crops_polygon_ix on GCM.lag_crops using gist(polygon);
create index ext_adress_ac_ix on GCM.ext_address using gist(address_coordinate);

-----------------------------------
-- VISTA DE UNIDADES ESPACIALES  --
-----------------------------------
CREATE OR REPLACE VIEW GCM.VW_SPATIAL_UNIT
AS
SELECT SU.OID, SU.LOCAL_ID, SU.AREA, SU.AREA_TYPE, LAT.DESCRIPTION AS AREA_TYPE_DESCRIP, 
       SU.DIMENSION_TYPE, LDT.DESCRIPTION AS DIMENSION_TYPE_DESCRIP, SU.LABEL AS SPATIAL_UNIT_DESCRIP, 
       SU.LAND_USE, ELU.DESCRIPTION AS LAND_USE_DESCRIP, EA.ADDRESS_ID, EA.STREET_NAME, EA.BUILDING_NAME, 
       EA.BUILDING_NUMBER, EA.POSTAL_CODE, EA.POST_BOX, EM.LOCAL_ID AS MUN_CODE, EM.NAME MUN_NAME, 
       ESP.LOCAL_ID AS SP_CODE, ESP.NAME AS SP_NAME, EC.CODE AS COUNTRY_CODE, EC.NAME AS COUNTRY_NAME,
       VAL.TOTAL_VALUE, TAX.TOTAL_AMOUNT, TAX.TOTAL_PAID, TAX.PERCENT_PAID, CROP.CROP_TYPE, CROP.CROP_DESCRIP, 
       SU.POLYGON, 
       ST_Y(ST_Transform(COALESCE(SU.REFERENCE_POINT, ST_Centroid(SU.POLYGON)), 4326)) AS LATITUDE, 
       ST_X(ST_Transform(COALESCE(SU.REFERENCE_POINT, ST_Centroid(SU.POLYGON)), 4326)) AS LONGITUDE   
FROM GCM.LAG_SPATIAL_UNIT SU
LEFT OUTER JOIN GCM.LAG_AREA_TYPE LAT ON (LAT.CODE=SU.AREA_TYPE)
LEFT OUTER JOIN GCM.LAG_DIMENSION_TYPE LDT ON (LDT.CODE=SU.DIMENSION_TYPE)
LEFT OUTER JOIN GCM.EXT_LAND_USE ELU ON (ELU.CODE=SU.LAND_USE)
LEFT OUTER JOIN GCM.EXT_ADDRESS EA ON (EA.OID=SU.ADDRESS_ID)
LEFT OUTER JOIN GCM.EXT_MUNICIPALITY EM ON (EM.CODE=EA.MUNICIPALITY)
LEFT OUTER JOIN GCM.EXT_STATE_PROVINCE ESP ON (ESP.CODE=EA.STATE_PROVINCE)
LEFT OUTER JOIN GCM.EXT_COUNTRY EC ON (EC.CODE=EA.COUNTRY)
LEFT OUTER JOIN (SELECT MAIN_CROP.SUNIT_ID, MAIN_CROP.CROP_TYPE, CT.DESCRIPTION AS CROP_DESCRIP
                 FROM 
                  (SELECT BU.SUNIT_ID, CR.CROP_TYPE,
                          RANK() OVER(PARTITION BY SUNIT_ID ORDER BY SUM(AREA) DESC) AS RNK
                   FROM GCM.LAG_CROPS CR
                   INNER JOIN GCM.LAG_BA_UNIT BU ON (BU.OID=CR.BAUNIT_ID)
                   GROUP BY BU.SUNIT_ID, CR.CROP_TYPE) MAIN_CROP
                   LEFT OUTER JOIN GCM.LAG_CROPS_TYPE CT ON (CT.CODE=MAIN_CROP.CROP_TYPE)
                   WHERE RNK=1) CROP ON (CROP.SUNIT_ID=SU.OID)
LEFT OUTER JOIN (SELECT SU.OID, SUM(VALUE) AS TOTAL_VALUE
				  FROM GCM.VW_EXT_CUR_VALUATION CV
				  INNER JOIN GCM.LAG_BA_UNIT BU ON (BU.OID=CV.OID)
				  INNER JOIN GCM.LAG_SPATIAL_UNIT SU ON (SU.OID=BU.SUNIT_ID)
				  GROUP BY SU.OID) VAL ON (VAL.OID=SU.OID)
LEFT OUTER JOIN (SELECT SU.OID, SUM(AMOUNT) AS TOTAL_AMOUNT, SUM(AMOUNT_PAID) AS TOTAL_PAID, ROUND(AVG(PERCENT_PAID),2) AS PERCENT_PAID
				  FROM GCM.VW_EXT_CUR_TAXATION CT
				  INNER JOIN GCM.LAG_BA_UNIT BU ON (BU.OID=CT.OID)
				  INNER JOIN GCM.LAG_SPATIAL_UNIT SU ON (SU.OID=BU.SUNIT_ID)
				  GROUP BY SU.OID) TAX ON (TAX.OID=SU.OID);

ALTER TABLE GCM.vw_spatial_unit OWNER TO GCM;







